/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-01-12 08:46:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.modules.comment;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ajax_005fcomment_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(9);
    _jspx_dependants.put("jar:file:/Users/ojeonghwan/git/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/SpringMVC/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/Users/ojeonghwan/git/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/SpringMVC/WEB-INF/lib/spring-webmvc-5.0.3.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1516666468000L));
    _jspx_dependants.put("jar:file:/Users/ojeonghwan/git/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/SpringMVC/WEB-INF/lib/spring-modules-validation-0.9.jar!/META-INF/spring-commons-validator.tld", Long.valueOf(1204779052000L));
    _jspx_dependants.put("jar:file:/Users/ojeonghwan/git/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/SpringMVC/WEB-INF/lib/spring-webmvc-5.0.3.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1516666468000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1629167951380L));
    _jspx_dependants.put("jar:file:/Users/ojeonghwan/git/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/SpringMVC/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.0.3.RELEASE.jar", Long.valueOf(1629167950684L));
    _jspx_dependants.put("jar:file:/Users/ojeonghwan/git/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/SpringMVC/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-modules-validation-0.9.jar", Long.valueOf(1629167704000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fvalidator_005fjavascript_0026_005fxhtml_005fstaticJavascript_005fformName_005fcdata_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fvalidator_005fjavascript_0026_005fxhtml_005fstaticJavascript_005fformName_005fcdata_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fvalidator_005fjavascript_0026_005fxhtml_005fstaticJavascript_005fformName_005fcdata_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
    _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_validator_005fjavascript_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("<script src=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" type=\"text/javascript\" charset=\"UTF-8\"></script>  \n");
      out.write("<!-- \n");
      out.write("<div id=\"container-wrap\">\n");
      out.write("    <div class=\"clearfix\">\n");
      out.write("        <div class=\"content-box\">\n");
      out.write("            <div class=\"content-full-img02\"></div>\n");
      out.write("            <div class=\"content-full-bg02-hidden\">\n");
      out.write("                <section class=\"content\">\n");
      out.write("                	-->\n");
      out.write("                	<!-- 글작성폼 및 목록 시작 -->\n");
      out.write("                    <article>  \n");
      out.write("                        <div class=\"row\">\n");
      out.write("                            <div class=\"col-md-12\">                            \n");
      out.write("                            \n");
      out.write("                               <h2>Comment<!--");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("--></h2>\n");
      out.write("                               <form method=\"post\" id=\"writeForm\" name=\"writeForm\" >\n");
      out.write("                                    <fieldset>\n");
      out.write("                                        <legend>");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("</legend>\n");
      out.write("                                        <table summary=\"");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("\" class=\"board_detail\">\n");
      out.write("                                            <caption>");
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("</caption>\n");
      out.write("                                            <colgroup>\n");
      out.write("                                                <col width=\"20%\" />\n");
      out.write("                                                <col width=\"30%\" />\n");
      out.write("                                                <col width=\"20%\" />\n");
      out.write("                                                <col width=\"30%\" />\n");
      out.write("                                            </colgroup>\n");
      out.write("                                            <tbody>\n");
      out.write("                                            	<tr>\n");
      out.write("                                                    <th><label for=\"userid\">");
      if (_jspx_meth_spring_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("</label></th>\n");
      out.write("                                                    <td class=\"text-left\"><input name=\"userid\" id=\"userid\" type=\"text\" placeholder=\"UserID\" class=\"wfull\"/> ");
      //  form:errors
      org.springframework.web.servlet.tags.form.ErrorsTag _jspx_th_form_005ferrors_005f0 = (org.springframework.web.servlet.tags.form.ErrorsTag) _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.get(org.springframework.web.servlet.tags.form.ErrorsTag.class);
      boolean _jspx_th_form_005ferrors_005f0_reused = false;
      try {
        _jspx_th_form_005ferrors_005f0.setPageContext(_jspx_page_context);
        _jspx_th_form_005ferrors_005f0.setParent(null);
        // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(38,156) name = path type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005ferrors_005f0.setPath("userid");
        int[] _jspx_push_body_count_form_005ferrors_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_form_005ferrors_005f0 = _jspx_th_form_005ferrors_005f0.doStartTag();
          if (_jspx_th_form_005ferrors_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_form_005ferrors_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_form_005ferrors_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_form_005ferrors_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.reuse(_jspx_th_form_005ferrors_005f0);
        _jspx_th_form_005ferrors_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005ferrors_005f0, _jsp_getInstanceManager(), _jspx_th_form_005ferrors_005f0_reused);
      }
      out.write("</td>\n");
      out.write("                                                    <th><label for=\"pass\">");
      if (_jspx_meth_spring_005fmessage_005f5(_jspx_page_context))
        return;
      out.write("</label></th>\n");
      out.write("                                                    <td class=\"text-left\"><input name=\"pass\" id=\"pass\" type=\"password\" placeholder=\"Password\" class=\"wfull\"/> ");
      //  form:errors
      org.springframework.web.servlet.tags.form.ErrorsTag _jspx_th_form_005ferrors_005f1 = (org.springframework.web.servlet.tags.form.ErrorsTag) _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.get(org.springframework.web.servlet.tags.form.ErrorsTag.class);
      boolean _jspx_th_form_005ferrors_005f1_reused = false;
      try {
        _jspx_th_form_005ferrors_005f1.setPageContext(_jspx_page_context);
        _jspx_th_form_005ferrors_005f1.setParent(null);
        // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(40,158) name = path type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005ferrors_005f1.setPath("pass");
        int[] _jspx_push_body_count_form_005ferrors_005f1 = new int[] { 0 };
        try {
          int _jspx_eval_form_005ferrors_005f1 = _jspx_th_form_005ferrors_005f1.doStartTag();
          if (_jspx_th_form_005ferrors_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_form_005ferrors_005f1[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_form_005ferrors_005f1.doCatch(_jspx_exception);
        } finally {
          _jspx_th_form_005ferrors_005f1.doFinally();
        }
        _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.reuse(_jspx_th_form_005ferrors_005f1);
        _jspx_th_form_005ferrors_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005ferrors_005f1, _jsp_getInstanceManager(), _jspx_th_form_005ferrors_005f1_reused);
      }
      out.write(" </td>\n");
      out.write("                                                </tr>\n");
      out.write("                                                <tr>\n");
      out.write("                                                    <th><label for=\"name\">");
      if (_jspx_meth_spring_005fmessage_005f6(_jspx_page_context))
        return;
      out.write("</label></th>\n");
      out.write("                                                    <td class=\"text-left\"><input name=\"name\" id=\"name\" type=\"text\"  placeholder=\"Name\" class=\"wfull\"/> ");
      //  form:errors
      org.springframework.web.servlet.tags.form.ErrorsTag _jspx_th_form_005ferrors_005f2 = (org.springframework.web.servlet.tags.form.ErrorsTag) _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.get(org.springframework.web.servlet.tags.form.ErrorsTag.class);
      boolean _jspx_th_form_005ferrors_005f2_reused = false;
      try {
        _jspx_th_form_005ferrors_005f2.setPageContext(_jspx_page_context);
        _jspx_th_form_005ferrors_005f2.setParent(null);
        // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(44,151) name = path type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005ferrors_005f2.setPath("name");
        int[] _jspx_push_body_count_form_005ferrors_005f2 = new int[] { 0 };
        try {
          int _jspx_eval_form_005ferrors_005f2 = _jspx_th_form_005ferrors_005f2.doStartTag();
          if (_jspx_th_form_005ferrors_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_form_005ferrors_005f2[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_form_005ferrors_005f2.doCatch(_jspx_exception);
        } finally {
          _jspx_th_form_005ferrors_005f2.doFinally();
        }
        _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.reuse(_jspx_th_form_005ferrors_005f2);
        _jspx_th_form_005ferrors_005f2_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005ferrors_005f2, _jsp_getInstanceManager(), _jspx_th_form_005ferrors_005f2_reused);
      }
      out.write("</td>\n");
      out.write("                                                    <th><label for=\"email\">");
      if (_jspx_meth_spring_005fmessage_005f7(_jspx_page_context))
        return;
      out.write("</label></th>\n");
      out.write("                                                    <td class=\"text-left\"><input name=\"email\" id=\"email\" type=\"text\" placeholder=\"Email\" class=\"wfull\"/> ");
      //  form:errors
      org.springframework.web.servlet.tags.form.ErrorsTag _jspx_th_form_005ferrors_005f3 = (org.springframework.web.servlet.tags.form.ErrorsTag) _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.get(org.springframework.web.servlet.tags.form.ErrorsTag.class);
      boolean _jspx_th_form_005ferrors_005f3_reused = false;
      try {
        _jspx_th_form_005ferrors_005f3.setPageContext(_jspx_page_context);
        _jspx_th_form_005ferrors_005f3.setParent(null);
        // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(46,153) name = path type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005ferrors_005f3.setPath("email");
        int[] _jspx_push_body_count_form_005ferrors_005f3 = new int[] { 0 };
        try {
          int _jspx_eval_form_005ferrors_005f3 = _jspx_th_form_005ferrors_005f3.doStartTag();
          if (_jspx_th_form_005ferrors_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_form_005ferrors_005f3[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_form_005ferrors_005f3.doCatch(_jspx_exception);
        } finally {
          _jspx_th_form_005ferrors_005f3.doFinally();
        }
        _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.reuse(_jspx_th_form_005ferrors_005f3);
        _jspx_th_form_005ferrors_005f3_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005ferrors_005f3, _jsp_getInstanceManager(), _jspx_th_form_005ferrors_005f3_reused);
      }
      out.write("</td>\n");
      out.write("                                                </tr>\n");
      out.write("                                                <tr>\n");
      out.write("                                                    <td colspan=\"10\" class=\"text-left\">\n");
      out.write("                                                        <textarea name=\"content\" id=\"content\" placeholder=\"Content\"></textarea>");
      //  form:errors
      org.springframework.web.servlet.tags.form.ErrorsTag _jspx_th_form_005ferrors_005f4 = (org.springframework.web.servlet.tags.form.ErrorsTag) _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.get(org.springframework.web.servlet.tags.form.ErrorsTag.class);
      boolean _jspx_th_form_005ferrors_005f4_reused = false;
      try {
        _jspx_th_form_005ferrors_005f4.setPageContext(_jspx_page_context);
        _jspx_th_form_005ferrors_005f4.setParent(null);
        // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(50,127) name = path type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005ferrors_005f4.setPath("content");
        int[] _jspx_push_body_count_form_005ferrors_005f4 = new int[] { 0 };
        try {
          int _jspx_eval_form_005ferrors_005f4 = _jspx_th_form_005ferrors_005f4.doStartTag();
          if (_jspx_th_form_005ferrors_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_form_005ferrors_005f4[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_form_005ferrors_005f4.doCatch(_jspx_exception);
        } finally {
          _jspx_th_form_005ferrors_005f4.doFinally();
        }
        _005fjspx_005ftagPool_005fform_005ferrors_0026_005fpath_005fnobody.reuse(_jspx_th_form_005ferrors_005f4);
        _jspx_th_form_005ferrors_005f4_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005ferrors_005f4, _jsp_getInstanceManager(), _jspx_th_form_005ferrors_005f4_reused);
      }
      out.write("\n");
      out.write("                                                        <script>\n");
      out.write("                                                            CKEDITOR.replace('content',{\n");
      out.write("                                                            	height:150,\n");
      out.write("                                                            	toolbarGroups : [\n");
      out.write("                                                            		{ name: 'document', groups: [ 'mode', 'document', 'doctools' ] },\n");
      out.write("                                                            		{ name: 'clipboard', groups: [ 'clipboard', 'undo' ] },\n");
      out.write("                                                            		{ name: 'editing', groups: [ 'find', 'selection', 'spellchecker', 'editing' ] },\n");
      out.write("                                                            		{ name: 'forms', groups: [ 'forms' ] },\n");
      out.write("                                                            		{ name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ] },\n");
      out.write("                                                            		{ name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi', 'paragraph' ] },\n");
      out.write("                                                            		{ name: 'links', groups: [ 'links' ] },\n");
      out.write("                                                            		{ name: 'insert', groups: [ 'insert' ] },\n");
      out.write("                                                            		{ name: 'styles', groups: [ 'styles' ] },\n");
      out.write("                                                            		{ name: 'colors', groups: [ 'colors' ] },\n");
      out.write("                                                            		{ name: 'tools', groups: [ 'tools' ] },\n");
      out.write("                                                            		{ name: 'others', groups: [ 'others' ] },\n");
      out.write("                                                            		{ name: 'about', groups: [ 'about' ] }\n");
      out.write("                                                            	],\n");
      out.write("                                                            	\n");
      out.write("                                                            	removeButtons : 'Source,Save,NewPage,ExportPdf,Preview,Print,Templates,Find,SelectAll,Scayt,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Replace,PasteText,PasteFromWord,Image,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,CopyFormatting,RemoveFormat,Blockquote,CreateDiv,JustifyLeft,JustifyCenter,JustifyRight,JustifyBlock,BidiLtr,BidiRtl,Language,Styles,TextColor,BGColor,ShowBlocks,Maximize,Format,Font,FontSize',\n");
      out.write("                                                            	removePlugins : \"exportpdf\"\n");
      out.write("                                                            		});\n");
      out.write("                                                        </script>\n");
      out.write("                                                     </td>\n");
      out.write("                                                </tr>                                               \n");
      out.write("                                                <tr>\n");
      out.write("                                                    <th><label for=\"code\">");
      if (_jspx_meth_spring_005fmessage_005f8(_jspx_page_context))
        return;
      out.write("</label></th>\n");
      out.write("                                                    <td colspan=\"3\" class=\"text-left\">\n");
      out.write("                                                        <img id=\"captchaImg\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modules/comment/captchaImg.do\" />\n");
      out.write("                                                        <div id=\"captchaAudio\" style=\"display:none;\"></div>                                                       \n");
      out.write("                                                        <input type=\"button\" id=\"refreshBtn\" value=\"");
      if (_jspx_meth_spring_005fmessage_005f9(_jspx_page_context))
        return;
      out.write("\" >\n");
      out.write("                                                        <input type=\"button\" id=\"audio\" value=\"");
      if (_jspx_meth_spring_005fmessage_005f10(_jspx_page_context))
        return;
      out.write("\" >  \n");
      out.write("                                                        <input type=\"text\" id=\"answer\" name=\"answer\" placeholder=\"CaptchaCode\"/> \n");
      out.write("                                                    </td>\n");
      out.write("                                                </tr>\n");
      out.write("                                            </tbody>\n");
      out.write("                                        </table>\n");
      out.write("                                        <nav class=\"btn-group\">\n");
      out.write("											<ul>\n");
      out.write("												<li><input type=\"button\" value=\"");
      if (_jspx_meth_spring_005fmessage_005f11(_jspx_page_context))
        return;
      out.write("\" id=\"writeBtn\"/></li>												\n");
      out.write("											</ul>\n");
      out.write("										</nav>\n");
      out.write("                                    </fieldset>\n");
      out.write("                                </form>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <div id=\"replies\"></div>\n");
      out.write("                        <nav class=\"paging-group\">\n");
      out.write("                            <ul class=\"pagination\"></ul>\n");
      out.write("                        </nav>\n");
      out.write("                    </article>\n");
      out.write("                    <!-- 글작성폼 및 목록 종료 -->\n");
      out.write("                    <!--\n");
      out.write("                </section>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$(document).ready(function() {\n");
      out.write("	\n");
      out.write("	    var board_idx = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("	\n");
      out.write("	    //초기화\n");
      out.write("	    getPageList(1);\n");
      out.write("	\n");
      out.write("	    //댓글목록\n");
      out.write("	    function getCommentList() {\n");
      out.write("	\n");
      out.write("	        $.getJSON(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modules/comment/ajaxlist/all/\" + board_idx, function(data) {\n");
      out.write("	\n");
      out.write("	            var str = \"\";\n");
      out.write("	\n");
      out.write("	            $(data).each(function() {\n");
      out.write("	                str += \"<div class='row'>\" +\n");
      out.write("	                    \"<div class='col-sm-12 col-md-12 col-lg-12'>\" +\n");
      out.write("	                    \"<ul class='content-data-1'>\" +\n");
      out.write("	                    \"<li data-rno='\" + this.comment_idx + \"'>\" +\n");
      out.write("	                    \"<div class='text-left'>\" +\n");
      out.write("	                    \"<h1 class='title'><p class='modifyname' style='font-weight:400;'>\" + this.name + \"</p></h1>\" +\n");
      out.write("	                    \"<div class='modifycontent'>\" + this.content + \"</div>\" +\n");
      out.write("	                    \"<h3 class='desc text-left' style='padding-top:20px;'>\" + this.regdate + \"</h3>\" +\n");
      out.write("	                    \"<input type='button' value='수정하기' class='modal-open-btn'> \" +\n");
      out.write("	                    \"<input type='button' value='삭제하기' id='deleteBtn'> \" +\n");
      out.write("	                    \"<input type='button' value='댓글달기' id='replyBtn'>\" +\n");
      out.write("	                    \"</div>\" +\n");
      out.write("	                    \"</li>\" +\n");
      out.write("	                    \"</ul>\" +\n");
      out.write("	                    \"</div>\" +\n");
      out.write("	                    \"</div>\" +\n");
      out.write("	                    \"<hr>\";\n");
      out.write("	            });\n");
      out.write("	\n");
      out.write("	            $(\"#replies\").html(str);\n");
      out.write("	\n");
      out.write("	        });\n");
      out.write("	    }\n");
      out.write("	\n");
      out.write("	    //댓글목록페이징\n");
      out.write("	    function getPageList(page) {\n");
      out.write("	\n");
      out.write("	        $.getJSON(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modules/comment/ajaxlist/\" + board_idx + \"/\" + page, function(data) {\n");
      out.write("	\n");
      out.write("	            var str = \"\";\n");
      out.write("	\n");
      out.write("	            $(data.list).each(function() {\n");
      out.write("	\n");
      out.write("	                if (this.depth > 0) {\n");
      out.write("	                    var icon = \"<i class='fas fa-comment-alt'></i>&nbsp;\";\n");
      out.write("	                } else {\n");
      out.write("	                    var icon = \"\";\n");
      out.write("	                }\n");
      out.write("\n");
      out.write("	                str += \"<div class='row'>\" +\n");
      out.write("	                    \"<div class='col-sm-12 col-md-12 col-lg-12'>\" +\n");
      out.write("	                    \"<ul class='content-data-1'>\" +\n");
      out.write("	                    \"<li data-rno='\" + this.comment_idx + \"'>\" +\n");
      out.write("	                    \"<div class='text-left'>\" +\n");
      out.write("	                    \"<h1 class='title'><p class='modifyname' style='font-weight:400;'>\" + icon + this.name + \"</p></h1>\" +\n");
      out.write("	                    \"<div class='modifycontent'>\" + this.content + \"</div>\" +\n");
      out.write("	                    \"<h3 class='desc text-left' style='padding-top:20px;'>\" + this.regdate + \"</h3>\" +\n");
      out.write("	                    \"<input type='button' value='수정하기' id='modifyBtn'> \" +\n");
      out.write("	                    \"<input type='button' value='삭제하기' id='deleteBtn'> \" +\n");
      out.write("	                    \"<input type='button' value='댓글달기' id='replyBtn'>\" +\n");
      out.write("	                    \"</div>\" +\n");
      out.write("	                    \"</li>\" +\n");
      out.write("	                    \"</ul>\" +\n");
      out.write("	                    \"</div>\" +\n");
      out.write("	                    \"</div>\" +\n");
      out.write("	                    \"<hr>\";\n");
      out.write("	            });\n");
      out.write("	\n");
      out.write("	            $(\"#replies\").html(str);\n");
      out.write("	\n");
      out.write("	            //페이징 \n");
      out.write("	            printPaging(data.pageMaker);\n");
      out.write("	\n");
      out.write("	        });\n");
      out.write("	    }\n");
      out.write("	\n");
      out.write("	    //페이징함수 \n");
      out.write("	    function printPaging(pageMaker) {\n");
      out.write("	\n");
      out.write("	        var str = \"\";\n");
      out.write("	\n");
      out.write("	        if (pageMaker.prev) {\n");
      out.write("	            str += \"<li><a href='\" + (pageMaker.page) + \"'><i class='fa fa-angle-double-left' aria-hidden='true'></i></a></li>\";\n");
      out.write("	            str += \"<li><a href='\" + (pageMaker.startPage - 1) + \"'><i class='fa fa-angle-left' aria-hidden='true'></i></a></li>\";\n");
      out.write("	        }\n");
      out.write("	\n");
      out.write("	        for (var i = pageMaker.startPage, len = pageMaker.endPage; i <= len; i++) {\n");
      out.write("	            var strClass = pageMaker.criteria.page == i ? 'class=active' : '';\n");
      out.write("	            str += \"<li><a href='\" + i + \"' \" + strClass + \">\" + i + \"</a></li> \";\n");
      out.write("	        }\n");
      out.write("	\n");
      out.write("	        if (pageMaker.next && pageMaker.endPage > 0) {\n");
      out.write("	            str += \"<li><a href='\" + (pageMaker.endPage + 1) + \"'><i class='fa fa-angle-right' aria-hidden='true'></i></a></li>\";\n");
      out.write("	            str += \"<li><a href='\" + (pageMaker.totalPage) + \"'><i class='fa fa-angle-double-right' aria-hidden='true'></i></a></li>\";\n");
      out.write("	        }\n");
      out.write("	\n");
      out.write("	        $(\".pagination\").html(str);\n");
      out.write("	\n");
      out.write("	        //페이징 번호클릭시 처리 \n");
      out.write("	        var replyPage = 1;\n");
      out.write("	\n");
      out.write("	        $(\".pagination\").on(\"click\", \"li a\", function(event) {\n");
      out.write("	            event.preventDefault();\n");
      out.write("	            replyPage = $(this).attr(\"href\");\n");
      out.write("	            getPageList(replyPage);\n");
      out.write("	        });\n");
      out.write("	    }\n");
      out.write("		\n");
      out.write("		//댓글등록    	\n");
      out.write("		$(\"#writeBtn\").on(\"click\",function(){\n");
      out.write("\n");
      out.write("			var board_idx = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("			\n");
      out.write("			var isValid = $(\"#writeForm\").validate().form();\n");
      out.write("			\n");
      out.write("			if (isValid == true){ //true 반환 \n");
      out.write("	    		\n");
      out.write("	   			CKupdate();\n");
      out.write("				    \n");
      out.write("			    //화면입력값 변수처리\n");
      out.write("			    var userid = $(\"#userid\").val();\n");
      out.write("			    var pass = $(\"#pass\").val();\n");
      out.write("			    var name = $(\"#name\").val();\n");
      out.write("			    var email = $(\"#email\").val();\n");
      out.write("			    var content = $(\"#content\").val();\n");
      out.write("					\n");
      out.write("					//ajax\n");
      out.write("				    $.ajax({\n");
      out.write("				    	type: \"POST\",\n");
      out.write("				        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modules/comment/ajaxInsert\",\n");
      out.write("				        headers: { \"Content-Type\": \"application/json\", \"X-HTTP-Method-Override\": \"POST\" },\n");
      out.write("				        dataType: \"text\",\n");
      out.write("				        data: JSON.stringify({ // stringify는 json개체를 string개체로 변환\n");
      out.write("				        userid: userid,\n");
      out.write("				        pass: pass,\n");
      out.write("				        name: name,\n");
      out.write("				        email: email,\n");
      out.write("				        content: content,\n");
      out.write("				        board_idx: board_idx\n");
      out.write("				    }),\n");
      out.write("				    success: function(result1) {\n");
      out.write("					    //서비스 성공 시 처리 할 내용\n");
      out.write("					    if (result1 == \"insertSuccess\") {\n");
      out.write("					      	alert(\"댓글등록 완료\");\n");
      out.write("					    }\n");
      out.write("					    //댓글목록출력\n");
      out.write("					    getPageList(1);\n");
      out.write("	\n");
      out.write("					    //댓글입력폼 초기화\n");
      out.write("					    $(\"#userid\").val(\"\");\n");
      out.write("					    $(\"#pass\").val(\"\");\n");
      out.write("					    $(\"#name\").val(\"\");\n");
      out.write("					    $(\"#email\").val(\"\");\n");
      out.write("					    $(\"#answer\").val(\"\");           \n");
      out.write("					    CKreset(); 	\n");
      out.write("				    },\n");
      out.write("				    error: function(request, status, error) {\n");
      out.write("				        // 서비스 실패 시 처리 할 내용\n");
      out.write("				    	alert(\"댓글등록 실패\");\n");
      out.write("				    }\n");
      out.write("				}); //ajax종료 	\n");
      out.write("	\n");
      out.write("				return false;\n");
      out.write("		   } 	\n");
      out.write("		});\n");
      out.write("\n");
      out.write("		 //댓글목록에서 수정하기 버튼 클릭시 - window.open실행 \n");
      out.write("		$(\"#replies\").on(\"click\", \"#modifyBtn\", function() {\n");
      out.write("	    	//화면입력값 변수처리\n");
      out.write("	        var comment = $(this).parent().parent();\n");
      out.write("	        var comment_idx = comment.attr(\"data-rno\");\n");
      out.write("	    	//console.log(comment_idx);\n");
      out.write("			openModify(comment_idx);\n");
      out.write("	    });\n");
      out.write("	    \n");
      out.write("	    function openModify(val) {	\n");
      out.write("		    var comment_idx = val;    	 \n");
      out.write("	        var _width = '910';\n");
      out.write("	        var _height = '550';\n");
      out.write("	     \n");
      out.write("	        // 팝업을 가운데 위치시키기 위해 아래와 같이 값 구하기\n");
      out.write("	        var _left = Math.ceil(( window.screen.width - _width )/2);\n");
      out.write("	        var _top = Math.ceil(( window.screen.height - _height )/2); \n");
      out.write("	     \n");
      out.write("	        window.open('/modules/comment/ajaxmodify.do?comment_idx=' + comment_idx + '', '댓글수정', 'width='+ _width +', height='+ _height +', left=' + _left + ', top='+ _top +', location=no, resizable=no' );\n");
      out.write("	    }\n");
      out.write("		\n");
      out.write("	    //모달창에서 수정버튼 클릭시 수정 처리 \n");
      out.write("	    $(\"#modifyBtn\").on(\"click\", function() {\n");
      out.write("	    	    	\n");
      out.write("	    	var isValid = $(\"#writeForm\").validate().form();\n");
      out.write("			\n");
      out.write("			if (isValid == true){ //true 반환\n");
      out.write("				\n");
      out.write("		        CKupdate();\n");
      out.write("		\n");
      out.write("		        //화면입력값 변수처리\n");
      out.write("		        var comment_idx = $(\"#comment_idx\").val();\n");
      out.write("		        var email = $(\"#email\").val();\n");
      out.write("		        var content = $(\"#content\").val();\n");
      out.write("		\n");
      out.write("		        //ajax통신\n");
      out.write("		        $.ajax({\n");
      out.write("		            type: \"PUT\",\n");
      out.write("		            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modules/comment/ajaxlist/modify/\" + comment_idx,\n");
      out.write("		            headers: { \"Content-Type\": \"application/json\", \"X-HTTP-Method-Override\": \"PUT\" },\n");
      out.write("		            dataType: \"text\",\n");
      out.write("		            data: JSON.stringify({ //stringify는 json개체를 string개체로 변환\n");
      out.write("		                comment_idx: comment_idx,\n");
      out.write("		                email: email,\n");
      out.write("		                content: content\n");
      out.write("		            }),\n");
      out.write("		            success: function(result) {		\n");
      out.write("		                //서비스 성공 시 처리 할 내용\n");
      out.write("		                if (result == \"modifySuccess\") {\n");
      out.write("		                    alert(\"댓글수정 완료\");\n");
      out.write("		                    $('.modal-box').removeClass('modal-on');\n");
      out.write("		                    $('.modal-back').removeClass('back-on');\n");
      out.write("		                    $('body').removeClass('body-lock');\n");
      out.write("		                }		\n");
      out.write("		                //댓글목록출력\n");
      out.write("		                getPageList(1);\n");
      out.write("		            },\n");
      out.write("		            error: function(request, status, error) {	\n");
      out.write("		                //서비스 실패 시 처리 할 내용\n");
      out.write("		                alert(\"댓글수정 실패\");\n");
      out.write("		            }\n");
      out.write("		        });\n");
      out.write("		        \n");
      out.write("	        	return false;\n");
      out.write("			} \n");
      out.write("	    });\n");
      out.write("	    \n");
      out.write("	    //댓글목록에서 수정하기 버튼 클릭시 - 모달창 실행 \n");
      out.write("	    /*\n");
      out.write("	    $(\"#replies\").on(\"click\", \"#modifyBtn\", function() {\n");
      out.write("			\n");
      out.write("	        // 모달창 뛰우기 \n");
      out.write("	        $('.modal-box').addClass('modal-on');\n");
      out.write("	        $('.modal-back').addClass('back-on');\n");
      out.write("	        $('body').addClass('body-lock');\n");
      out.write("	\n");
      out.write("	        var comment = $(this).parent().parent();\n");
      out.write("	        var comment_idx = comment.attr(\"data-rno\");\n");
      out.write("	\n");
      out.write("	        //ajax통신\n");
      out.write("	        $.ajax({\n");
      out.write("	            type: \"GET\",\n");
      out.write("	            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modules/comment/ajaxlist/read/\" + comment_idx,\n");
      out.write("	            headers: { \"Content-Type\": \"application/json\", \"X-HTTP-Method-Override\": \"GET\" },\n");
      out.write("	            dataType: \"json\",\n");
      out.write("	            success: function(result) {	\n");
      out.write("	                //서비스 성공 시 처리 할 내용                  \n");
      out.write("	                $(\"#replycomment_idx\").val(result.comment_idx);\n");
      out.write("	                $(\"#replyuserid\").val(result.userid);\n");
      out.write("	                $(\"#replypass\").val(result.pass);\n");
      out.write("	                $(\"#replyname\").val(result.name);\n");
      out.write("	                $(\"#replyemail\").val(result.email);\n");
      out.write("	                var html = $(\"#replyeditor\").val(result.content);\n");
      out.write("	                CKEDITOR.instances['replyeditor'].setData(html);\n");
      out.write("	            },\n");
      out.write("	            error: function(request, status, error) {	\n");
      out.write("	                //서비스 실패 시 처리 할 내용              \n");
      out.write("	                alert(\"댓글보기 실패\");\n");
      out.write("	            }\n");
      out.write("	        });\n");
      out.write("	    });\n");
      out.write("	    */\n");
      out.write("	    \n");
      out.write("		//댓글목록에서 답글하기 버튼 클릭시 답글등록창 실행 - window.open 실행 \n");
      out.write("	    $(\"#replies\").on(\"click\", \"#replyBtn\", function() {\n");
      out.write("	    	//화면입력값 변수처리\n");
      out.write("	        var comment = $(this).parent().parent();\n");
      out.write("	        var comment_idx = comment.attr(\"data-rno\");\n");
      out.write("	    	//console.log(comment_idx);\n");
      out.write("			openReply(comment_idx);\n");
      out.write("	    });\n");
      out.write("	    \n");
      out.write("	    function openReply(val) {	\n");
      out.write("		    var comment_idx = val;    	 \n");
      out.write("	        var _width = '910';\n");
      out.write("	        var _height = '550';\n");
      out.write("	     \n");
      out.write("	        // 팝업을 가운데 위치시키기 위해 아래와 같이 값 구하기\n");
      out.write("	        var _left = Math.ceil(( window.screen.width - _width )/2);\n");
      out.write("	        var _top = Math.ceil(( window.screen.height - _height )/2); \n");
      out.write("	     \n");
      out.write("	        window.open('/modules/comment/ajaxreply.do?comment_idx=' + comment_idx + '', '답글등록', 'width='+ _width +', height='+ _height +', left=' + _left + ', top='+ _top +', location=no, resizable=no' );    \n");
      out.write("	    }\n");
      out.write("	\n");
      out.write("	    //댓글목록에서 삭제버튼 클릭 시 삭제처리  \n");
      out.write("	    $(\"#replies\").on(\"click\", \"#deleteBtn\", function() {\n");
      out.write("	\n");
      out.write("	        //화면입력값 변수처리\n");
      out.write("	        var comment = $(this).parent().parent();\n");
      out.write("	        var comment_idx = comment.attr(\"data-rno\");\n");
      out.write("	\n");
      out.write("	        //ajax 통신\n");
      out.write("	        $.ajax({\n");
      out.write("	            type: \"DELETE\",\n");
      out.write("	            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modules/comment/ajaxlist/delete/\" + comment_idx,\n");
      out.write("	            headers: { \"Content-Type\": \"application/json\", \"X-HTTP-Method-Override\": \"DELETE\" },\n");
      out.write("	            dataType: \"text\",\n");
      out.write("	            data: JSON.stringify({\n");
      out.write("	                comment_idx: comment_idx\n");
      out.write("	            }),\n");
      out.write("	            success: function(result) {	\n");
      out.write("	                //서비스 성공 시 처리 할 내용\n");
      out.write("	                if (result == \"deleteSuccess\") {\n");
      out.write("	                    alert(\"댓글삭제 완료\");\n");
      out.write("	                }	\n");
      out.write("	                //댓글목록출력\n");
      out.write("	                getPageList(1);\n");
      out.write("	            },\n");
      out.write("	            error: function(request, status, error) {	\n");
      out.write("	                // 서비스 실패 시 처리 할 내용\n");
      out.write("	                alert(\"댓글삭제 실패\");\n");
      out.write("	            }\n");
      out.write("	        });\n");
      out.write("	    });\n");
      out.write("	    \n");
      out.write("	    //댓글목록에서 답글하기 버튼 클릭시 답글등록창 실행 - 모달창 실행 \n");
      out.write("	   	/*\n");
      out.write("	    $(\"#replies\").on(\"click\", \"#replyBtn\", function() {\n");
      out.write("	    	\n");
      out.write("	        // 모달창 뛰우기 \n");
      out.write("	        $('.modal-box').addClass('modal-on');\n");
      out.write("	        $('.modal-back').addClass('back-on');\n");
      out.write("	        $('body').addClass('body-lock');\n");
      out.write("	\n");
      out.write("	        var comment = $(this).parent().parent();\n");
      out.write("	        var comment_idx = comment.attr(\"data-rno\");\n");
      out.write("	\n");
      out.write("	        //ajax통신\n");
      out.write("	        $.ajax({\n");
      out.write("	            type: \"GET\",\n");
      out.write("	            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/modules/comment/ajaxlist/read/\" + comment_idx,\n");
      out.write("	            headers: { \"Content-Type\": \"application/json\", \"X-HTTP-Method-Override\": \"GET\" },\n");
      out.write("	            dataType: \"json\",\n");
      out.write("	            success: function(result) {\n");
      out.write("	\n");
      out.write("	                //서비스 성공 시 처리 할 내용                  \n");
      out.write("	                $(\"#replycomment_idx\").val(result.comment_idx);\n");
      out.write("	                $(\"#replyparent\").val(result.parent);\n");
      out.write("	                $(\"#replydepth\").val(result.depth);\n");
      out.write("	                $(\"#replysortno\").val(result.sortno);\n");
      out.write("	            },\n");
      out.write("	            error: function(request, status, error) {\n");
      out.write("	\n");
      out.write("	                //서비스 실패 시 처리 할 내용              \n");
      out.write("	                alert(\"댓글보기 실패\");\n");
      out.write("	            }\n");
      out.write("	        });\n");
      out.write("	    });\n");
      out.write("	    */	  	\n");
      out.write("	\n");
      out.write("	    //모달창에서 답글버튼 클릭 시 답글등록 처리  \n");
      out.write("	    $(\"#replyBtn\").on(\"click\", function() {\n");
      out.write("\n");
      out.write("	    	var board_idx = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("	    	\n");
      out.write("	        CKupdate();\n");
      out.write("	\n");
      out.write("	        //화면입력값 변수처리\n");
      out.write("	        var comment_idx = $(\"#replycomment_idx\").val();\n");
      out.write("	        var parent = $(\"#replyparent\").val();\n");
      out.write("	        var depth = $(\"#replydepth\").val();\n");
      out.write("	        var sortno = $(\"#replysortno\").val();\n");
      out.write("	        var userid = $(\"#replyuserid\").val();\n");
      out.write("	        var pass = $(\"#replypass\").val();\n");
      out.write("	        var name = $(\"#replyname\").val();\n");
      out.write("	        var email = $(\"#replyemail\").val();\n");
      out.write("	        var content = $(\"#replyeditor\").val();\n");
      out.write("	\n");
      out.write("	        //ajax\n");
      out.write("	        $.ajax({\n");
      out.write("	            type: \"POST\",\n");
      out.write("	            url: \"ajaxInsert\",\n");
      out.write("	            headers: { \"Content-Type\": \"application/json\", \"X-HTTP-Method-Override\": \"POST\" },\n");
      out.write("	            dataType: \"text\",\n");
      out.write("	            data: JSON.stringify({ // stringify는 json개체를 string개체로 변환\n");
      out.write("	                comment_idx: comment_idx,\n");
      out.write("	                parent: parent,\n");
      out.write("	                depth: depth,\n");
      out.write("	                sortno: sortno,\n");
      out.write("	                userid: userid,\n");
      out.write("	                pass: pass,\n");
      out.write("	                name: name,\n");
      out.write("	                email: email,\n");
      out.write("	                content: content,\n");
      out.write("	                board_idx: board_idx\n");
      out.write("	            }),\n");
      out.write("	            success: function(result) {\n");
      out.write("	\n");
      out.write("	                //서비스 성공 시 처리 할 내용\n");
      out.write("	                if (result == \"insertSuccess\") {\n");
      out.write("	                    alert(\"답글등록 완료\");\n");
      out.write("	                    $('.modal-box').removeClass('modal-on');\n");
      out.write("	                    $('.modal-back').removeClass('back-on');\n");
      out.write("	                    $('body').removeClass('body-lock');\n");
      out.write("	                }\n");
      out.write("	\n");
      out.write("	                //댓글목록출력\n");
      out.write("	                getPageList(1);\n");
      out.write("	\n");
      out.write("	                //화면입력폼 초기화 \n");
      out.write("	                $(\"#replyuserid\").val(\"\");\n");
      out.write("	                $(\"#replypass\").val(\"\");\n");
      out.write("	                $(\"#replyname\").val(\"\");\n");
      out.write("	                $(\"#replyemail\").val(\"\");\n");
      out.write("	                \n");
      out.write("	                CKreset();\n");
      out.write("	            },\n");
      out.write("	            error: function(request, status, error) {\n");
      out.write("	\n");
      out.write("	                // 서비스 실패 시 처리 할 내용\n");
      out.write("	                alert(\"댓글등록 실패\");\n");
      out.write("	            }\n");
      out.write("	        });\n");
      out.write("	    });\n");
      out.write("	\n");
      out.write("	    //AJAX 로 폼의 데이터를 전송할 때 CKEDITOR로 변환 된 textarea값을 다시 변경해줘야 데이터가 전달된다.\n");
      out.write("	    function CKupdate() {\n");
      out.write("	        for (instance in CKEDITOR.instances)\n");
      out.write("	            CKEDITOR.instances[instance].updateElement();\n");
      out.write("	    }\n");
      out.write("	\n");
      out.write("	    function CKreset() {\n");
      out.write("	        for (instance in CKEDITOR.instances)\n");
      out.write("	            CKEDITOR.instances[instance].setData(\"\");\n");
      out.write("\n");
      out.write("           		$(\"#content-error\").remove();\n");
      out.write("	    }\n");
      out.write("	\n");
      out.write("	});\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_validator_005fjavascript_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  validator:javascript
    org.springmodules.validation.commons.taglib.JavascriptValidatorTag _jspx_th_validator_005fjavascript_005f0 = (org.springmodules.validation.commons.taglib.JavascriptValidatorTag) _005fjspx_005ftagPool_005fvalidator_005fjavascript_0026_005fxhtml_005fstaticJavascript_005fformName_005fcdata_005fnobody.get(org.springmodules.validation.commons.taglib.JavascriptValidatorTag.class);
    boolean _jspx_th_validator_005fjavascript_005f0_reused = false;
    try {
      _jspx_th_validator_005fjavascript_005f0.setPageContext(_jspx_page_context);
      _jspx_th_validator_005fjavascript_005f0.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(8,0) name = formName type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_validator_005fjavascript_005f0.setFormName("commentVO");
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(8,0) name = staticJavascript type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_validator_005fjavascript_005f0.setStaticJavascript("false");
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(8,0) name = xhtml type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_validator_005fjavascript_005f0.setXhtml("true");
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(8,0) name = cdata type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_validator_005fjavascript_005f0.setCdata("false");
      int _jspx_eval_validator_005fjavascript_005f0 = _jspx_th_validator_005fjavascript_005f0.doStartTag();
      if (_jspx_th_validator_005fjavascript_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fvalidator_005fjavascript_0026_005fxhtml_005fstaticJavascript_005fformName_005fcdata_005fnobody.reuse(_jspx_th_validator_005fjavascript_005f0);
      _jspx_th_validator_005fjavascript_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_validator_005fjavascript_005f0, _jsp_getInstanceManager(), _jspx_th_validator_005fjavascript_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(9,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/resources/js/my_jquery.js");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(23,46) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("bbs.title.write");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(26,48) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("bbs.table.legend");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f2_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f2.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(27,56) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setCode("bbs.table.summary.write");
      int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
        if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
      _jspx_th_spring_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f3_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f3.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(28,53) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f3.setCode("bbs.table.caption");
      int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
        if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
      _jspx_th_spring_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f4_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f4.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(37,76) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f4.setCode("label.userid");
      int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
        if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
      _jspx_th_spring_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f5_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f5.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(39,74) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f5.setCode("label.pass");
      int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
        if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f5.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
      _jspx_th_spring_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f6_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f6.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(43,74) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f6.setCode("label.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
        if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f6.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
      _jspx_th_spring_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f7 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f7_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f7.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(45,75) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f7.setCode("label.email");
      int[] _jspx_push_body_count_spring_005fmessage_005f7 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f7 = _jspx_th_spring_005fmessage_005f7.doStartTag();
        if (_jspx_th_spring_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f7[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f7.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f7.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f7);
      _jspx_th_spring_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f8 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f8_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f8.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(77,74) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f8.setCode("label.code");
      int[] _jspx_push_body_count_spring_005fmessage_005f8 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f8 = _jspx_th_spring_005fmessage_005f8.doStartTag();
        if (_jspx_th_spring_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f8[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f8.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f8.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f8);
      _jspx_th_spring_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f9 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f9_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f9.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(81,100) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f9.setCode("button.refresh");
      int[] _jspx_push_body_count_spring_005fmessage_005f9 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f9 = _jspx_th_spring_005fmessage_005f9.doStartTag();
        if (_jspx_th_spring_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f9[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f9.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f9.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f9);
      _jspx_th_spring_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f10 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f10_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f10.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(82,95) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f10.setCode("button.voice");
      int[] _jspx_push_body_count_spring_005fmessage_005f10 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f10 = _jspx_th_spring_005fmessage_005f10.doStartTag();
        if (_jspx_th_spring_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f10[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f10.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f10.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f10);
      _jspx_th_spring_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f11 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f11_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f11.setParent(null);
      // /WEB-INF/views/modules/comment/ajax_comment_list.jsp(90,44) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f11.setCode("button.create");
      int[] _jspx_push_body_count_spring_005fmessage_005f11 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f11 = _jspx_th_spring_005fmessage_005f11.doStartTag();
        if (_jspx_th_spring_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f11[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f11.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f11.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f11);
      _jspx_th_spring_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f11_reused);
    }
    return false;
  }
}
