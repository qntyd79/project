/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-01-04 05:29:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.contents;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class innomaps_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1629167951380L));
    _jspx_dependants.put("jar:file:/Users/ojeonghwan/git/project/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/SpringMVC/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<div id=\"slider-wrap\">\r\n");
      out.write("    <div class=\"slider-box\">\r\n");
      out.write("        <div class=\"slider\">\r\n");
      out.write("            <div class=\"slider-left-btn\">\r\n");
      out.write("                <a href=\"#\"><i class=\"fas fa-angle-left fa-2x\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"slider-item\">\r\n");
      out.write("                <div class='slider-caption'>\r\n");
      out.write("                    <h2 class=\"slider-title\">Mobile Mapping System Real world data collecting tools</h2>\r\n");
      out.write("                    <h3 class=\"slider-desc\">MMS 원천 기술 확보와 최고 성능의 장비 투입</h3>\r\n");
      out.write("                    <p class=\"slider-summary\">도로/실내/항공 파노라마 및 정사영상/Point Cloud</p>\r\n");
      out.write("                    <section>\r\n");
      out.write("                        <article>\r\n");
      out.write("                            <div class=\"row\">\r\n");
      out.write("                                <div class=\"col-md-12 col-sm-4\">\r\n");
      out.write("                                    <ul class=\"content-panel-3\">\r\n");
      out.write("                                        <li>\r\n");
      out.write("                                            <div class=\"panel text-center\">\r\n");
      out.write("                                                <div class=\"icon-top\"><i class=\"fas fa-road\"></i></div>\r\n");
      out.write("                                                <h1 class=\"title\">차량 장착용 파노라마 이미지 수집</h1>\r\n");
      out.write("                                                <h2 class=\"subtitle\">nebula-DSLR는 DSLR 전자셔터 모드가 적용 된 파노라마 이미지 수집장치로 교체용 카메라 보유가 필요없으며, 관성항법장치에 기반한 좌표 자세값 획득이 가능합니다.</h2>\r\n");
      out.write("                                                <h3 class=\"desc\"></h3>\r\n");
      out.write("                                                <h4 class=\"summary summary-last-child\"><a href=\"/jhbbs/contents/solution01.jsp\">자세히보기</a></h4>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </li>\r\n");
      out.write("                                        <li>\r\n");
      out.write("                                            <div class=\"panel text-center\">\r\n");
      out.write("                                                <div class=\"icon-top\"><i class=\"fas fa-street-view\"></i></div>\r\n");
      out.write("                                                <h1 class=\"title\">차량 장착용 고정밀 모바일 매핑 수집</h1>\r\n");
      out.write("                                                <h2 class=\"subtitle\">nebula-LP는 FOG타입의 고정밀 관성항법장치와 LiDAR센서가 완벽하게 결합되어 있으며 동기화 모듈 연산 및 데이터 수집용 연산모듈을 모두 내장하고 있습니다.</h2>\r\n");
      out.write("                                                <h3 class=\"desc\"></h3>\r\n");
      out.write("                                                <h4 class=\"summary summary-last-child\"><a href=\"/jhbbs/contents/solution02.jsp\">자세히보기</a></h4>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </li>\r\n");
      out.write("                                        <li>\r\n");
      out.write("                                            <div class=\"panel text-center\">\r\n");
      out.write("                                                <div class=\"icon-top\"><i class=\"fas fa-layer-group\"></i></div>\r\n");
      out.write("                                                <h1 class=\"title\">드론 장착용 고정밀 모바일 매핑 수집</h1>\r\n");
      out.write("                                                <h2 class=\"subtitle\">nebula-AP+는 GPS 단절구간과 자성을 띠는 구조물의 영향을 적게 받으며 결과적으로 동급의 드론용 MMS에서 얻을 수 있는 최상의 데이터 획득이 가능합니다.</h2>\r\n");
      out.write("                                                <h3 class=\"desc\"></h3>\r\n");
      out.write("                                                <h4 class=\"summary summary-last-child\"><a href=\"/jhbbs/contents/solution03.jsp\">자세히보기</a></h4>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </li>\r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"row\">\r\n");
      out.write("                                <div class=\"col-md-12 col-sm-4\">\r\n");
      out.write("                                    <ul class=\"content-panel-3\">\r\n");
      out.write("                                        <li>\r\n");
      out.write("                                            <div class=\"panel text-center\">\r\n");
      out.write("                                                <div class=\"icon-top\"><i class=\"fas fa-chess-board\"></i></div>\r\n");
      out.write("                                                <h1 class=\"title\">UAV형 항공영상 수집</h1>\r\n");
      out.write("                                                <h2 class=\"subtitle\">WingtraOne은 최대 40분의 비행시간과 최소 GSD 0.7cm/px급의 정사영상을 확보할 수 있으며, GSD 3cm/px급으로 최대 4.0㎢의 면적 촬영이 가능합니다.</h2>\r\n");
      out.write("                                                <h3 class=\"desc\"></h3>\r\n");
      out.write("                                                <h4 class=\"summary summary-last-child\"><a href=\"/jhbbs/contents/solution04.jsp\">자세히보기</a></h4>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </li>\r\n");
      out.write("                                        <li>\r\n");
      out.write("                                            <div class=\"panel text-center\">\r\n");
      out.write("                                                <div class=\"icon-top\"><i class=\"fas fa-qrcode\"></i></div>\r\n");
      out.write("                                                <h1 class=\"title\">실내용 고정밀 모바일 매핑 수집</h1>\r\n");
      out.write("                                                <h2 class=\"subtitle\">TIMMS는 업계 유일의 GPS나 SLAM을 사용하지 않는 고정밀 IMU 기반의 관성 항법 시스템을 적용하고 있으며 우수한 품질의 매핑 데이터를 균일하게 획득할수 있습니다.</h2>\r\n");
      out.write("                                                <h3 class=\"desc\"></h3>\r\n");
      out.write("                                                <h4 class=\"summary summary-last-child\"><a href=\"/jhbbs/contents/solution05.jsp\">자세히보기</a></h4>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </li>\r\n");
      out.write("                                        <li>\r\n");
      out.write("                                            <div class=\"panel text-center\">\r\n");
      out.write("                                                <div class=\"icon-top\"><i class=\"fas fa-database\"></i></div>\r\n");
      out.write("                                                <h1 class=\"title\">고정밀 모바일 매핑 기반 DATA 구축</h1>\r\n");
      out.write("                                                <h2 class=\"subtitle\">차량용 수집장비 및 실내용 수집장비로 수집한 데이터를 활용하여 후처리 프로세싱을 거쳐 영상정보, 점군정보, 위치정보 기반 데이터를 구축할수 있습니다.</h2>\r\n");
      out.write("                                                <h3 class=\"desc\"></h3>\r\n");
      out.write("                                                <h4 class=\"summary summary-last-child\"><a href=\"/jhbbs/contents/solution06.jsp\">자세히보기</a></h4>\r\n");
      out.write("                                            </div>\r\n");
      out.write("                                        </li>\r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </article>\r\n");
      out.write("                    </section>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"slider-img\">\r\n");
      out.write("                    <img src=\"/resources/images/slide/slide05.jpg\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- <div class=\"slider-video\">                      \r\n");
      out.write("                       <video muted autoplay loop>\r\n");
      out.write("                           <source src=\"/jhbbs/images/wingtra.mp4\" type=\"video/mp4\">\r\n");
      out.write("                       </video>\r\n");
      out.write("                    </div> -->\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"slider-right-btn\">\r\n");
      out.write("                <a href=\"#\"><i class=\"fas fa-angle-right fa-2x\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /WEB-INF/views/contents/innomaps.jsp(3,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("/WEB-INF/views/include/header.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /WEB-INF/views/contents/innomaps.jsp(101,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("/WEB-INF/views/include/footer.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }
}
